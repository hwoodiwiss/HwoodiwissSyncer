name: build

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/*.gitattributes"
      - "**/*.gitignore"
      - "**/*.md"
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      generate-aot-metadata:
        description: "Should AOT metadata be generated and published from the build"
        type: boolean
        required: false

env:
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  FORCE_COLOR: 1
  NUGET_XMLDOC_MODE: skip
  TERM: xterm

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4

      - name: Install .NET Workloads
        run: dotnet workload restore

      - name: Build & Test
        shell: pwsh
        run: .\build\build.ps1

  publish-aot:
    strategy:
      matrix:
        architecture: [arm64, amd64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4

      - name: Install .NET Workloads
        run: dotnet workload restore

      - name: Install ARM64 native dependencies
        if: ${{ matrix.architecture == 'arm64' }}
        run: |
          sudo dpkg --add-architecture arm64
          sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
          EOF'
          sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
          sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
          sudo apt update
          sudo apt install --yes clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64

      - name: Publish AOT
        shell: pwsh
        run: |
          .\build\publish-aot.ps1 -RuntimeIdentifier linux-${{ matrix.architecture }}

      - name: Publish AOT Build
        uses: actions/upload-artifact@v4
        with:
          name: publish-aot-${{ matrix.architecture }}
          path: ./artifacts/publish/HwoodiwissSyncer/release_linux-${{ matrix.architecture == 'amd64' && 'x64' || matrix.architecture }}

      - name: Publish AOT Build
        uses: actions/upload-artifact@v4
        with:
          name: publish-aot-metadata-${{ matrix.architecture }}
          path: ./artifacts/out/**/*.(mstat|dgml.xml)
