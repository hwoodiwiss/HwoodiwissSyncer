name: publish-image

on:
  workflow_dispatch:
    inputs:
      tag-version:
        description: "The tag version to use for the image"
        required: true
      generate-binlog:
        description: "Should we generate binlogs for the builds"
        type: boolean
        required: false
  push:
    tags:
      - "v*"
  issue_comment:
    types: ["created"]

permissions:
  contents: read
  packages: write

jobs:
  get-tag-version:
    if: github.event_name != 'issue_comment' || (github.event.issue.pull_request != '' && startsWith(github.event.comment.body, '/publish') && github.triggering_actor == github.repository_owner)
    runs-on: ubuntu-latest
    outputs:
      tag-version: ${{ steps.get_version_details.outputs.tag-version }}
      ref: ${{ steps.get_version_details.outputs.ref-name }}
    steps:
      - name: Get Tag Details
        if: github.event_name != 'issue_comment'
        run: |
          echo "TAG_VERSION=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag-version || github.ref_name }}" >> "$GITHUB_ENV"
          echo "REF_NAME=${{ github.ref_name || '' }}" >> "$GITHUB_ENV"

      - name: Get PR Details
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue
            const pr_details_response = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number
            })
            core.exportVariable('TAG_VERSION', `pr-${pr_details_response.data.number}`)
            core.exportVariable('REF_NAME', pr_details_response.data.head.ref)

      - name: Get Version
        id: get_version_details
        run: |
          echo "tag-version=$TAG_VERSION" >> "$GITHUB_OUTPUT"
          echo "ref-name=$REF_NAME" >> "$GITHUB_OUTPUT"

  build-image:
    needs: [get-tag-version]
    strategy:
      matrix:
        architecture: [arm64, amd64]
        mode: [aot, jit]
      fail-fast: false

    runs-on: ${{ matrix.architecture == 'arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ needs.get-tag-version.outputs.ref }}

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4

      - name: Install .NET Workloads
        run: dotnet workload restore

      - name: Login to GHCR
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u hwoodiwiss --password-stdin

      - name: Publish Image
        run: |
          dotnet publish ./src/HwoodiwissSyncer/HwoodiwissSyncer.csproj ${{ inputs.generate-binlog && '-bl' || '' }} --self-contained --os linux --arch ${{ matrix.architecture }} \
          /t:PublishContainer ${{ matrix.mode == 'jit' && '/p:PublishAot=false /p:PublishTrimmed=true' || '' }} \
          -p ContainerImageTags='"${{ needs.get-tag-version.outputs.tag-version }}-${{ matrix.architecture }}${{ matrix.mode == 'jit' && '-jit' || '' }}${{ matrix.architecture == 'arm64' && ';latest' || '' }}${{ (matrix.architecture == 'arm64' && matrix.mode == 'jit') && '-jit' || '' }}"'

      - name: Publish Binlog
        if: inputs.generate-binlog == true
        uses: actions/upload-artifact@v4
        with:
          name: binlog-${{ matrix.architecture }}-${{ matrix.mode }}
          path: ./msbuild.binlog

  create-tag:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [get-tag-version, build-image]
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Create Tag
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/${{ needs.get-tag-version.outputs.tag-version }}',
                sha: context.sha
              })
